{"version":3,"file":"policies.component.js","sourceRoot":"","sources":["../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-TO0yoQC9.tmp/0/src/app/policies/policies.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,iCAAgC,oBAAoB,CAAC,CAAA;AACrD,iCAA+B,qCAAqC,CAAC,CAAA;AAWrE;IAIE,2BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAEpD,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;aAC/C,SAAS,CACR,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,EACpC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEnB,CAAC;IAES,mCAAO,GAAf,UAAgB,KAAK;QACrB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAhCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;YACrC,SAAS,EAAE,CAAC,kCAAe,CAAC;SAE7B,CAAC;;yBAAA;IA2BF,wBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,yBAAiB,oBA0B7B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { PoliciesOptions } from './policies-options';\nimport { PoliciesService} from '../shared/services/policies.service';\nimport { Policy } from '../shared/domain/policy';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-policies',\n  templateUrl: 'policies.component.html',\n  styleUrls: ['policies.component.css'],\n  providers: [PoliciesService]\n\n})\nexport class PoliciesComponent implements OnInit {\n  policiesOptions: PoliciesOptions;\n  policies: Policy[];\n\n  constructor(private policiesService: PoliciesService) {\n\n  }\n\n  ngOnInit() {\n    this.policies = [];\n    this.policiesOptions = new PoliciesOptions();\n    this.policiesOptions.number = \"\";\n    this.policiesOptions.limit = 10;\n    this.policiesOptions.page = 1;\n\n     this.policiesService.query(this.policiesOptions)\n     .subscribe(\n       policies => this.policies = policies,\n       this.onError);\n\n  }\n\n    private onError(error) {\n    return Observable.throw(error.message);\n  }\n\n}\n"]}