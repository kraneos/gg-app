{"version":3,"file":"fee-policy-icon.pipe.js","sourceRoot":"","sources":["../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-TO0yoQC9.tmp/0/src/app/home/fee-policy-icon.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAOpD;IAAA;QACU,uBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;QACzB,wBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,wBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAkBvC,CAAC;IAhBC,qCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC9B,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,gBAAgB,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzE,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzE,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC;IACH,CAAC;IAEO,gDAAoB,GAA5B,UAA6B,MAAgB,EAAE,KAAa;QAC1D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IAvBH;QAAC,WAAI,CAAC;YACJ,IAAI,EAAE,eAAe;SACtB,CAAC;;yBAAA;IAsBF,wBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,yBAAiB,oBAqB7B,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Fee } from '../shared/domain/fee';\n\n@Pipe({\n  name: 'feePolicyIcon'\n})\nexport class FeePolicyIconPipe implements PipeTransform {\n  private VEHICLE_RISK_TYPES = [1];\n  private INTEGRAL_RISK_TYPES = [2];\n  private EMPLOYEE_RISK_TYPES = [3, 4];\n\n  transform(value: Fee, args?: any): any {\n    let riskType = value.policy.risk.riskType;\n    if (this.validateAgainstArray(this.VEHICLE_RISK_TYPES, riskType)) {\n      return 'directions_car';\n    } else if (this.validateAgainstArray(this.INTEGRAL_RISK_TYPES, riskType)) {\n      return 'home';\n    } else if (this.validateAgainstArray(this.EMPLOYEE_RISK_TYPES, riskType)) {\n      return 'favorite';\n    } else {\n      return 'help_outline';\n    }\n  }\n\n  private validateAgainstArray(values: number[], value: number) {\n    return values.indexOf(value) > -1;\n  }\n}\n"]}