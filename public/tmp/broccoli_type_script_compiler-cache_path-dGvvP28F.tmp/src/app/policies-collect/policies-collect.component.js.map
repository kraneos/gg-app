{"version":3,"file":"policies-collect.component.js","sourceRoot":"","sources":["../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-ZrUhIxD8.tmp/0/src/app/policies-collect/policies-collect.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MdToolbar } from '@angular2-material/toolbar';\nimport { MdButton } from '@angular2-material/button';\nimport { MD_SIDENAV_DIRECTIVES } from '@angular2-material/sidenav';\nimport { MD_LIST_DIRECTIVES } from '@angular2-material/list';\nimport { MD_CARD_DIRECTIVES } from '@angular2-material/card';\nimport { MdInput } from '@angular2-material/input';\nimport { MdCheckbox } from '@angular2-material/checkbox';\nimport { MdRadioButton, MdRadioGroup } from '@angular2-material/radio';\nimport { MdIcon, MdIconRegistry } from '@angular2-material/icon';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\nimport {MdUniqueSelectionDispatcher} from '@angular2-material/core';\nimport {MD_SLIDE_TOGGLE_DIRECTIVES} from '@angular2-material/slide-toggle';\n\nimport { CashAccount } from '../shared/domain/cash-account';\nimport { LedgerAccount } from '../shared/domain/ledger-account';\nimport { Asset } from '../shared/domain/asset';\nimport { Client } from '../shared/domain/client';\nimport { Producer } from '../shared/domain/producer';\nimport { Fee } from '../shared/domain/fee';\nimport { LedgerAccountsQueryOptions } from '../shared/domain/ledger-accounts-query-options';\nimport { AssetsQueryOptions } from '../shared/domain/assets-query-options';\nimport { FEE_STATES } from '../shared/domain/enums/fee-states';\n\nimport { LedgerAccountsService } from '../shared/services/ledger-accounts.service';\nimport { CashAccountsService } from '../shared/services/cash-accounts.service';\nimport { AssetsService } from '../shared/services/assets.service';\nimport { FeesService } from '../shared/services/fees.service';\nimport { CurrentUserService } from '../shared/services/current-user.service';\nimport { ProducersService } from '../shared/services/producers.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-policies-collect',\n  templateUrl: 'policies-collect.component.html',\n  styleUrls: ['policies-collect.component.css'],\n  directives: [\n    MD_SIDENAV_DIRECTIVES,\n    MD_LIST_DIRECTIVES,\n    MD_CARD_DIRECTIVES,\n    MdToolbar,\n    MdButton,\n    MdInput,\n    MdCheckbox,\n    MdRadioGroup,\n    MdRadioButton,\n    MdIcon,\n    ROUTER_DIRECTIVES,\n    MD_SLIDE_TOGGLE_DIRECTIVES\n  ],\n  providers: [\n    MdIconRegistry,\n    MdUniqueSelectionDispatcher,\n    LedgerAccountsService,\n    AssetsService,\n    CashAccountsService,\n    FeesService,\n    CurrentUserService,\n    ProducersService\n  ]\n})\nexport class PoliciesCollectComponent implements OnInit, OnDestroy {\n  fee: Fee;\n  collection: LedgerAccount;\n  cash: Asset;\n  allowSubmit: boolean;\n  showProducers: boolean;\n  receiptNumber: string;\n  amount: number;\n  producers: Producer[];\n  producer: Producer;\n  producerId: string;\n\n  private LEDGER_ACCOUNT_COBRANZA = 'Cobranza';\n  private ASSET_EFECTIVO = 'Efectivo';\n\n  private sub: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private ledgerAccountsService: LedgerAccountsService,\n    private assetsService: AssetsService,\n    private cashAccountsService: CashAccountsService,\n    private feesService: FeesService,\n    private currentUserService: CurrentUserService,\n    private producersService: ProducersService\n  ) { }\n\n  ngOnInit() {\n    this.fee = new Fee();\n    this.collection = new LedgerAccount();\n    this.cash = new Asset();\n    this.allowSubmit = false;\n    this.producers = [];\n    this.producer = null;\n    this.showProducers = true;\n\n    this.sub = this.route.params.subscribe(params => {\n      let feeId = params['feeId'];\n      this.fetchFee(feeId);\n    });\n    this.fetchCollectionLedgerAccount();\n    this.fetchCashAsset();\n    this.fetchProducers();\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  fetchCollectionLedgerAccount() {\n    var query = new LedgerAccountsQueryOptions();\n    query.name = this.LEDGER_ACCOUNT_COBRANZA;\n    this.ledgerAccountsService\n      .query(query)\n      .subscribe(\n      ledgerAccounts => this.collection = ledgerAccounts.length > 0 ? ledgerAccounts[0] : null,\n      this.onError\n      );\n  }\n\n  fetchCashAsset() {\n    var query = new AssetsQueryOptions();\n    query.name = this.ASSET_EFECTIVO;\n    this.assetsService\n      .query(query)\n      .subscribe(\n      assets => this.cash = assets.length > 0 ? assets[0] : null,\n      this.onError\n      );\n  }\n\n  fetchFee(feeId) {\n    this.feesService\n      .get(feeId)\n      .subscribe(\n      fee => {\n        this.fee = fee;\n        this.amount = fee.value;\n      },\n      this.onError\n      );\n  }\n\n  fetchProducers() {\n    this.producersService\n      .query()\n      .subscribe(\n      producers => this.producers = producers,\n      this.onError\n      );\n  }\n\n  submit() {\n    var cashAccount = new CashAccount();\n    cashAccount.amount = this.amount;\n    cashAccount.asset = this.cash;\n    cashAccount.balance = this.amount;\n    cashAccount.date = new Date();\n    cashAccount.description = 'Cobranza a ' + Client.getFullName(this.fee.policy.client);\n    cashAccount.fee = this.fee;\n    cashAccount.ledgerAccount = this.collection;\n    cashAccount.producer = this.getSelectedProducer(this.producerId);\n    cashAccount.receiptNumber = this.receiptNumber;\n\n    this.cashAccountsService\n      .post(cashAccount)\n      .subscribe(\n      res => {\n        this.fee.state = FEE_STATES.PAGADO;\n        this.feesService\n          .put(this.fee.objectId, { state: FEE_STATES.PAGADO })\n          .subscribe(\n          res => this.router.navigate(['policies', this.fee.policy.objectId]),\n          this.onError);\n      },\n      this.onError);\n  }\n\n  getProducerName(prodId) {\n    var prod = this.producers.find(e => e.objectId === prodId);\n    return prod ? prod.name : null;\n  }\n\n  assignAllowSubmit() {\n    return this.fee && this.cash && this.collection && this.producers;\n  }\n\n  private getSelectedProducer(producerId): Producer {\n    return producerId ?\n      this.producers.find(p => p.objectId === producerId) :\n      null;\n  }\n\n  private onError(error) {\n    return Observable.throw(error.message);\n  }\n}\n"]}