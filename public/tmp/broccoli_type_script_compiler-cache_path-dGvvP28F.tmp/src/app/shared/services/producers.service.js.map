{"version":3,"file":"producers.service.js","sourceRoot":"","sources":["../../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-ZrUhIxD8.tmp/0/src/app/shared/services/producers.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAK3C,8BAA6B,iBAAiB,CAAC,CAAA;AAG/C;IACI;;OAEG;IACH,0BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,GAAG,GAAG,kBAAkB,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,YAAY;aACnB,GAAG,CAAC,GAAG,CAAC;aACR,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;aACnC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAdL;QAAC,iBAAU,EAAE;;wBAAA;IAeb,uBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,wBAAgB,mBAc5B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Producer } from '../domain/producer';\nimport { ParseService } from './parse.service';\n\n@Injectable()\nexport class ProducersService {\n    /**\n     *\n     */\n    constructor(private parseService: ParseService) {\n    }\n\n    query(): Observable<Producer[]> {\n        let url = 'classes/Producer';\n        return this.parseService\n            .get(url)\n            .map(this.parseService.extractArray)\n            .catch(this.parseService.handleError);\n    }\n}\n"]}