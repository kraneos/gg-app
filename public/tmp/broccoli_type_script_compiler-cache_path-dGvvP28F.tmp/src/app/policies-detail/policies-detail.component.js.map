{"version":3,"file":"policies-detail.component.js","sourceRoot":"","sources":["../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-ZrUhIxD8.tmp/0/src/app/policies-detail/policies-detail.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,uBAAuC,iBAAiB,CAAC,CAAA;AACzD,wBAA0B,4BAA4B,CAAC,CAAA;AACvD,uBAAyB,2BAA2B,CAAC,CAAA;AACrD,wBAAsC,4BAA4B,CAAC,CAAA;AACnE,qBAAmC,yBAAyB,CAAC,CAAA;AAC7D,qBAAmC,yBAAyB,CAAC,CAAA;AAC7D,sBAAwB,0BAA0B,CAAC,CAAA;AACnD,yBAA2B,6BAA6B,CAAC,CAAA;AACzD,sBAA4C,0BAA0B,CAAC,CAAA;AACvE,qBAAuC,yBAAyB,CAAC,CAAA;AACjE,uBAAkC,iBAAiB,CAAC,CAAA;AACpD,qBAA0C,yBAAyB,CAAC,CAAA;AAEpE,qBAAqB,uBAAuB,CAAC,CAAA;AAC7C,wBAAwB,0BAA0B,CAAC,CAAA;AACnD,uBAAuB,yBAAyB,CAAC,CAAA;AAMjD,iCAAgC,qCAAqC,CAAC,CAAA;AACtE,iCAAgC,qCAAqC,CAAC,CAAA;AACtE,kCAAiC,sCAAsC,CAAC,CAAA;AACxE,kCAAiC,sCAAsC,CAAC,CAAA;AACxE,6BAA4B,iCAAiC,CAAC,CAAA;AAE9D,qCAAkC,wBAAwB,CAAC,CAAA;AAgC3D;IAYE,iCACU,KAAqB,EACrB,MAAc,EACd,eAAgC,EAChC,eAAgC,EAChC,gBAAkC,EAClC,gBAAkC,EAClC,WAAwB;QANxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QAX1B,uBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;QACzB,wBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,wBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IASC,CAAC;IAEvC,0CAAQ,GAAR;QAAA,iBAkEC;QAjEC,IAAI,CAAC,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,WAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC3C,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACtB,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC;iBACzB,SAAS,CACV,UAAA,MAAM;gBACJ,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC;qBAC/B,SAAS,CACV,UAAA,IAAI;oBACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAA;oBAChB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;gBAC3H,CAAC,EACD,UAAA,KAAK;oBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBAEL,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,kBAAkB,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClF,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC;yBAC3B,SAAS,CACV,UAAA,QAAQ;wBACN,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;wBACxB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;oBAC3H,CAAC,EACD,UAAA,KAAK;wBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,mBAAmB,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1F,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC;yBAC5B,SAAS,CACV,UAAA,SAAS;wBACP,KAAI,CAAC,SAAS,GAAG,SAAS,CAAA;wBAC1B,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;oBAC3H,CAAC,EACD,UAAA,KAAK;wBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,mBAAmB,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1F,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC;yBAC5B,SAAS,CACV,UAAA,SAAS;wBACP,KAAI,CAAC,SAAS,GAAG,SAAS,CAAA;wBAC1B,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,IAAI,KAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;oBAC3H,CAAC,EACD,UAAA,KAAK;wBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,EACD,UAAA,KAAK;gBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAEO,yCAAO,GAAf,UAAgB,KAAK;QACnB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAEO,sDAAoB,GAA5B,UAA6B,MAAgB,EAAE,KAAa;QAC1D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IAjIH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,qBAAqB;YAC/B,WAAW,EAAE,gCAAgC;YAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;YAC5C,UAAU,EAAE;gBACV,+BAAqB;gBACrB,yBAAkB;gBAClB,yBAAkB;gBAClB,mBAAS;gBACT,iBAAQ;gBACR,eAAO;gBACP,qBAAU;gBACV,oBAAY;gBACZ,qBAAa;gBACb,aAAM;gBACN,0BAAiB;aAClB;YACD,SAAS,EAAE;gBACT,qBAAc;gBACd,kCAA2B;gBAC3B,kCAAe;gBACf,0BAAW;gBACX,kCAAe;gBACf,oCAAgB;gBAChB,oCAAgB,CAAC;YACnB,KAAK,EAAE;gBACL,wCAAiB;aAClB;SACF,CAAC;;+BAAA;IAqGF,8BAAC;AAAD,CAAC,AApGD,IAoGC;AApGY,+BAAuB,0BAoGnC,CAAA","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MdToolbar } from '@angular2-material/toolbar';\nimport { MdButton } from '@angular2-material/button';\nimport { MD_SIDENAV_DIRECTIVES } from '@angular2-material/sidenav';\nimport { MD_LIST_DIRECTIVES } from '@angular2-material/list';\nimport { MD_CARD_DIRECTIVES } from '@angular2-material/card';\nimport { MdInput } from '@angular2-material/input';\nimport { MdCheckbox } from '@angular2-material/checkbox';\nimport { MdRadioButton, MdRadioGroup } from '@angular2-material/radio';\nimport { MdIcon, MdIconRegistry } from '@angular2-material/icon';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\nimport {MdUniqueSelectionDispatcher} from '@angular2-material/core';\n\nimport { Risk } from '../shared/domain/risk';\nimport { Company } from '../shared/domain/company';\nimport { Policy } from '../shared/domain/policy';\nimport { Vehicle } from '../shared/domain/vehicle';\nimport { Integral } from '../shared/domain/integral';\nimport { Employee } from '../shared/domain/employee';\nimport { Fee } from '../shared/domain/fee';\n\nimport { PoliciesService } from '../shared/services/policies.service';\nimport { VehiclesService } from '../shared/services/vehicles.service';\nimport { IntegralsService } from '../shared/services/integrals.service';\nimport { EmployeesService } from '../shared/services/employees.service';\nimport { FeesService } from '../shared/services/fees.service';\n\nimport { FeeStatusNamePipe } from './fee-status-name.pipe';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-policies-detail',\n  templateUrl: 'policies-detail.component.html',\n  styleUrls: ['policies-detail.component.css'],\n  directives: [\n    MD_SIDENAV_DIRECTIVES,\n    MD_LIST_DIRECTIVES,\n    MD_CARD_DIRECTIVES,\n    MdToolbar,\n    MdButton,\n    MdInput,\n    MdCheckbox,\n    MdRadioGroup,\n    MdRadioButton,\n    MdIcon,\n    ROUTER_DIRECTIVES\n  ],\n  providers: [\n    MdIconRegistry,\n    MdUniqueSelectionDispatcher,\n    PoliciesService,\n    FeesService,\n    VehiclesService,\n    IntegralsService,\n    EmployeesService],\n  pipes: [\n    FeeStatusNamePipe\n  ]\n})\nexport class PoliciesDetailComponent implements OnInit, OnDestroy {\n  policy: Policy;\n  fees: Fee[];\n  vehicles: Vehicle[];\n  integrals: Integral[];\n  employees: Employee[];\n  hideProgress: boolean;\n  private sub: any;\n  private VEHICLE_RISK_TYPES = [1];\n  private INTEGRAL_RISK_TYPES = [2];\n  private EMPLOYEE_RISK_TYPES = [3, 4];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private policiesService: PoliciesService,\n    private vehiclesService: VehiclesService,\n    private integralsService: IntegralsService,\n    private employeesService: EmployeesService,\n    private feesService: FeesService) { }\n\n  ngOnInit() {\n    this.policy = new Policy();\n    this.policy.risk = new Risk();\n    this.policy.risk.company = new Company();\n    this.vehicles = [];\n    this.employees = [];\n    this.integrals = [];\n    this.fees = [];\n\n    this.sub = this.route.params.subscribe(params => {\n      let id = params['id'];\n      this.policiesService.get(id)\n        .subscribe(\n        policy => {\n          this.policy = policy;\n          this.feesService.queryByPolicy(id)\n            .subscribe(\n            fees => {\n              this.fees = fees\n              this.hideProgress = this.fees !== null && (this.vehicles !== null || this.employees !== null || this.integrals !== null);\n            },\n            error => {\n              this.onError(error);\n              this.hideProgress = true;\n            });\n\n          if (this.validateAgainstArray(this.VEHICLE_RISK_TYPES, this.policy.risk.riskType)) {\n            this.vehiclesService.query(id)\n              .subscribe(\n              vehicles => {\n                this.vehicles = vehicles\n                this.hideProgress = this.fees !== null && (this.vehicles !== null || this.employees !== null || this.integrals !== null);\n              },\n              error => {\n                this.onError(error);\n                this.hideProgress = true;\n              });\n          } else if (this.validateAgainstArray(this.INTEGRAL_RISK_TYPES, this.policy.risk.riskType)) {\n            this.integralsService.query(id)\n              .subscribe(\n              integrals => {\n                this.integrals = integrals\n                this.hideProgress = this.fees !== null && (this.vehicles !== null || this.employees !== null || this.integrals !== null);\n              },\n              error => {\n                this.onError(error);\n                this.hideProgress = true;\n              });\n          } else if (this.validateAgainstArray(this.EMPLOYEE_RISK_TYPES, this.policy.risk.riskType)) {\n            this.employeesService.query(id)\n              .subscribe(\n              employees => {\n                this.employees = employees\n                this.hideProgress = this.fees !== null && (this.vehicles !== null || this.employees !== null || this.integrals !== null);\n              },\n              error => {\n                this.onError(error);\n                this.hideProgress = true;\n              });\n          }\n        },\n        error => {\n          this.onError(error);\n          this.hideProgress = true;\n        });\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  private onError(error) {\n    return Observable.throw(error.message);\n  }\n\n  private validateAgainstArray(values: number[], value: number) {\n    return values.indexOf(value) > -1;\n  }\n}\n"]}