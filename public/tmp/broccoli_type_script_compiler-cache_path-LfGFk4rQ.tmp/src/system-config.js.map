{"version":3,"file":"system-config.js","sourceRoot":"","sources":["Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-L0B8idjO.tmp/0/src/system-config.ts"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,uCAAuC;AACvC,sEAAsE;AAEtE;;gGAEgG;AAChG,kCAAkC;AAClC,IAAM,GAAG,GAAQ;IACf,oBAAoB,EAAE,2BAA2B;IACjD,OAAO,EAAE,cAAc;CACxB,CAAC;AAEF,mCAAmC;AACnC,IAAM,QAAQ,GAAQ;IACpB,2BAA2B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE;IACzF,yBAAyB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;IACrF,6BAA6B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE;IAC7F,yBAAyB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;IACrF,yBAAyB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;IACrF,0BAA0B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;IACvF,yBAAyB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;IACrF,0BAA0B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;IACvF,4BAA4B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE;IAC3F,4BAA4B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE;IAC3F,oCAAoC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,oBAAoB,EAAE;IAC3G,iCAAiC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE;IACrG,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE;CACrE,CAAC;AAEF,gGAAgG;AAChG;;gGAEgG;AAChG,IAAM,OAAO,GAAa;IACxB,4BAA4B;IAC5B,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,iBAAiB;IACjB,2BAA2B;IAC3B,mCAAmC;IAEnC,sBAAsB;IACtB,MAAM;IAEN,wBAAwB;IACxB,KAAK;IACL,YAAY;IACZ,UAAU;IACV,aAAa;IACb,WAAW;IACX,oBAAoB;IACpB,qBAAqB;IACrB,cAAc;IACd,sBAAsB;CAEvB,CAAC;AAEF,IAAM,uBAAuB,GAAQ,EAAE,CAAC;AACxC,OAAO,CAAC,OAAO,CAAC,UAAC,UAAkB;IACjC,uBAAuB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC1D,CAAC,CAAC,CAAC;AAKH,wCAAwC;AACxC,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,EAAE;QACH,UAAU,EAAE,iBAAiB;QAC7B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,SAAS;KAClB;IACD,QAAQ,EAAE,uBAAuB;CAClC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAA,GAAG,EAAE,UAAA,QAAQ,EAAE,CAAC,CAAC","sourcesContent":["// SystemJS configuration file, see links for more information\n// https://github.com/systemjs/systemjs\n// https://github.com/systemjs/systemjs/blob/master/docs/config-api.md\n\n/***********************************************************************************************\n * User Configuration.\n **********************************************************************************************/\n/** Map relative paths to URLs. */\nconst map: any = {\n  '@angular2-material': 'vendor/@angular2-material',\n  'parse': 'vendor/parse'\n};\n\n/** User packages configuration. */\nconst packages: any = {\n  '@angular2-material/button': { format: 'cjs', defaultExtension: 'js', main: 'button.js' },\n  '@angular2-material/card': { format: 'cjs', defaultExtension: 'js', main: 'card.js' },\n  '@angular2-material/checkbox': { format: 'cjs', defaultExtension: 'js', main: 'checkbox.js' },\n  '@angular2-material/core': { format: 'cjs', defaultExtension: 'js', main: 'core.js' },\n  '@angular2-material/icon': { format: 'cjs', defaultExtension: 'js', main: 'icon.js' },\n  '@angular2-material/input': { format: 'cjs', defaultExtension: 'js', main: 'input.js' },\n  '@angular2-material/list': { format: 'cjs', defaultExtension: 'js', main: 'list.js' },\n  '@angular2-material/radio': { format: 'cjs', defaultExtension: 'js', main: 'radio.js' },\n  '@angular2-material/sidenav': { format: 'cjs', defaultExtension: 'js', main: 'sidenav.js' },\n  '@angular2-material/toolbar': { format: 'cjs', defaultExtension: 'js', main: 'toolbar.js' },\n  '@angular2-material/progress-circle': { format: 'cjs', defaultExtension: 'js', main: 'progress-circle.js' },\n  '@angular2-material/slide-toggle': { format: 'cjs', defaultExtension: 'js', main: 'slide-toggle.js' },\n  'parse': { format: 'cjs', defaultExtension: 'js', main: 'index.js' }\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n/***********************************************************************************************\n * Everything underneath this line is managed by the CLI.\n **********************************************************************************************/\nconst barrels: string[] = [\n  // Angular specific barrels.\n  '@angular/core',\n  '@angular/common',\n  '@angular/compiler',\n  '@angular/forms',\n  '@angular/http',\n  '@angular/router',\n  '@angular/platform-browser',\n  '@angular/platform-browser-dynamic',\n\n  // Thirdparty barrels.\n  'rxjs',\n\n  // App specific barrels.\n  'app',\n  'app/shared',\n  'app/home',\n  'app/clients',\n  'app/login',\n  'app/clients-detail',\n  'app/policies-detail',\n  'app/policies',\n  'app/policies-collect',\n  /** @cli-barrel */\n];\n\nconst cliSystemConfigPackages: any = {};\nbarrels.forEach((barrelName: string) => {\n  cliSystemConfigPackages[barrelName] = { main: 'index' };\n});\n\n/** Type declaration for ambient System. */\ndeclare var System: any;\n\n// Apply the CLI SystemJS configuration.\nSystem.config({\n  map: {\n    '@angular': 'vendor/@angular',\n    'rxjs': 'vendor/rxjs',\n    'main': 'main.js'\n  },\n  packages: cliSystemConfigPackages\n});\n\n// Apply the user's configuration.\nSystem.config({ map, packages });\n"]}