{"version":3,"file":"policies.service.js","sourceRoot":"","sources":["../../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-L0B8idjO.tmp/0/src/app/shared/services/policies.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAM3C,8BAA6B,iBAAiB,CAAC,CAAA;AAG/C;IACI;;OAEG;IACH,yBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAED,+BAAK,GAAL,UAAM,IAAqB;QACvB,IAAI,GAAG,GAAG,sBAAsB,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5F,GAAG,GAAG,GAAG,GAAG,sBAAsB,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,YAAY;aACnB,GAAG,CAAC,GAAG,CAAC;aACR,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;aACnC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED,6BAAG,GAAH,UAAI,EAAU;QACV,IAAI,GAAG,GAAG,iBAAiB,GAAG,EAAE,CAAC;QACjC,GAAG,GAAG,GAAG,GAAG,8BAA8B,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,YAAY;aACnB,GAAG,CAAC,GAAG,CAAC;aACR,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAxBL;QAAC,iBAAU,EAAE;;uBAAA;IAyBb,sBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,uBAAe,kBAwB3B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { PoliciesOptions } from '../../policies/policies-options';\nimport { Policy } from '../domain/policy';\nimport { ParseService } from './parse.service';\n\n@Injectable()\nexport class PoliciesService {\n    /**\n     *\n     */\n    constructor(private parseService: ParseService) {\n    }\n\n    query(opts: PoliciesOptions): Observable<Policy[]> {\n        let url = 'classes/Policy?skip=' + (+opts.limit * (opts.page - 1)) + '&limit=' + opts.limit;\n        url = url + '&include=client,risk';\n        return this.parseService\n            .get(url)\n            .map(this.parseService.extractArray)\n            .catch(this.parseService.handleError);\n    }\n\n    get(id: string): Observable<Policy> {\n        let url = 'classes/Policy/' + id;\n        url = url + '?include=risk.company,client';\n        return this.parseService\n            .get(url)\n            .map(this.parseService.extractObject)\n            .catch(this.parseService.handleError);\n    }\n}\n"]}