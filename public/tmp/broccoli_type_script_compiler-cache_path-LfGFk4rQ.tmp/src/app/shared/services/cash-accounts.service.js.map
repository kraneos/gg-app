{"version":3,"file":"cash-accounts.service.js","sourceRoot":"","sources":["../../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-L0B8idjO.tmp/0/src/app/shared/services/cash-accounts.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAM3C,8BAA6B,iBAAiB,CAAC,CAAA;AAG/C;IACE;;OAEG;IACH,6BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAED,kCAAI,GAAJ,UAAK,GAAgB;QACnB,IAAI,GAAG,GAAG,qBAAqB,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAExC,MAAM,CAAC,IAAI,CAAC,YAAY;aACrB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aACf,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAEO,gDAAkB,GAA1B,UAA2B,GAAgB;QACzC,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACrF,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;QACvD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC7G,IAAI,CAAC,QAAQ,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC9F,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IA7BH;QAAC,iBAAU,EAAE;;2BAAA;IA8Bb,0BAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,2BAAmB,sBA6B/B,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { HomeOptions } from '../../home/home-options';\nimport { CashAccount } from '../domain/cash-account';\nimport { ParseService } from './parse.service';\n\n@Injectable()\nexport class CashAccountsService {\n  /**\n   *\n   */\n  constructor(private parseService: ParseService) {\n  }\n\n  post(obj: CashAccount): Observable<Response> {\n    let url = 'classes/CashAccount';\n    let body = this.getCashAccountBody(obj);\n\n    return this.parseService\n      .post(url, body)\n      .catch(this.parseService.handleError);\n  }\n\n  private getCashAccountBody(obj: CashAccount) {\n    let body: any = {};\n    body.amount = obj.amount;\n    body.asset = { __type: 'Pointer', className: 'Asset', objectId: obj.asset.objectId };\n    body.balance = obj.balance;\n    body.date = { __type: 'Date', iso: obj.date.toJSON() };\n    body.description = obj.description;\n    body.fee = { __type: 'Pointer', className: 'Fee', objectId: obj.fee.objectId };\n    body.ledgerAccount = { __type: 'Pointer', className: 'LedgerAccount', objectId: obj.ledgerAccount.objectId };\n    body.producer = { __type: 'Pointer', className: 'Producer', objectId: obj.producer.objectId };\n    body.receiptNumber = obj.receiptNumber;\n    return body;\n  }\n}\n"]}