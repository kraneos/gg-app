{"version":3,"file":"ledger-accounts.service.js","sourceRoot":"","sources":["../../../Users/poloagustin/git/angular-seggu/tmp/broccoli_type_script_compiler-input_base_path-ZrUhIxD8.tmp/0/src/app/shared/services/ledger-accounts.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAO3C,8BAA6B,iBAAiB,CAAC,CAAA;AAG/C;IACE;;OAEG;IACH,+BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAED,qCAAK,GAAL,UAAM,OAAmC;QACvC,IAAI,GAAG,GAAG,8BAA8B,CAAC;QACzC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,GAAG,GAAG,GAAG,GAAG,kBAAkB,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACvD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY;aACrB,GAAG,CAAC,GAAG,CAAC;aACR,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;aACnC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAjBH;QAAC,iBAAU,EAAE;;6BAAA;IAkBb,4BAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,6BAAqB,wBAiBjC,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { HomeOptions } from '../../home/home-options';\nimport { LedgerAccount } from '../domain/ledger-account';\nimport { LedgerAccountsQueryOptions } from '../domain/ledger-accounts-query-options';\nimport { ParseService } from './parse.service';\n\n@Injectable()\nexport class LedgerAccountsService {\n  /**\n   *\n   */\n  constructor(private parseService: ParseService) {\n  }\n\n  query(options: LedgerAccountsQueryOptions): Observable<LedgerAccount[]> {\n    let url = 'classes/LedgerAccount?skip=0';\n    if (options.name) {\n      url = url + '&where={\"name\":\"' + options.name + '\"}';\n    }\n    return this.parseService\n      .get(url)\n      .map(this.parseService.extractArray)\n      .catch(this.parseService.handleError);\n  }\n}\n"]}